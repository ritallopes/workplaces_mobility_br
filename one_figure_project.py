# -*- coding: utf-8 -*-
"""one_figure_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D2EpILkv6LfBuMR9VoAG10X6irZWv60h
"""

!pip install pandas-profiling==2.9.0



#install libraries
import pandas as pd
import matplotlib.pyplot as plt

#importing data
dataset = pd.read_csv("https://www.gstatic.com/covid19/mobility/Global_Mobility_Report.csv")
dataset.head()
dataset.info()

#selecting country (Brazil) and columns of states
ds_br = dataset.loc[dataset.country_region == "Brazil"]
ds_br = ds_br.iloc[:, [1,2,7,8,9,10,11,12,13]].copy()

#changing index to date
ds_br.date = pd.to_datetime(ds_br.date)
ds_br.index = ds_br.date
ds_br = ds_br.drop(labels="date", axis=1)

#rename columns
ds_br.columns = ['country','state', 'retail', 'grocery', 'parks', 'transit', 'workplaces','residential']
ds_br.head()

#cleaning and preparing observation (row)
ds_br = ds_br.loc[~ds_br.state.isnull()]
ds_br.state = ds_br.state.str.replace("State of ","")
ds_br.state.unique()

#time series workplace analysis
wp_time = ds_br.groupby(by=[ds_br.index,"state"]).mean().unstack()["workplaces"]
wp_time

ds_br.state.unique()





#the graphic
fig, ax = plt.subplots(nrows=1,ncols=5,figsize=(23,4))
states = ["Pará","Bahia","Goiás","São Paulo","Paraná"]
for i,state in enumerate(states):
  wp_time.rolling(window=7).mean().plot(legend=False,color="grey",linewidth=0.5, alpha=0.4, ax=ax[i])
  wp_time[state].rolling(window=7).mean().plot(legend=False,color="#329999",linewidth=5, alpha=0.7, ax=ax[i])
  ax[i].set_title(state,fontsize=12,ha='right')
  ax[i].xaxis.grid(False)
  ax[i].set_xlabel("")
  ax[i].set_xticklabels(["","Mar","Apr","May","Jun","Jul","Aug","Sep"])
  ax[i].xaxis.set_tick_params(labelsize=12)
  ax[i].yaxis.set_tick_params(labelsize=12)
  ax[i].set_xlim('2020-02-15', '2020-10-10')


  # coords min
  ymin = wp_time[state].rolling(window=7).mean().min()
  xmin = wp_time[state].rolling(window=7).mean().idxmin()
  #coords last day
  xlast = wp_time.rolling(window=7).mean().last_valid_index()
  ylast = wp_time.rolling(window=7).mean().loc[xlast, state]
  #point and annotates in ax
  ax[i].scatter([xmin, xlast], [ymin, ylast], color='#87244B')

  anmin = ax[i].annotate(int(ymin), 
            xy=( xmin, ymin),
            xycoords='data',
            xytext=(xmin, ymin-5),
            color= '#329999',  
            weight='bold',
            fontsize=12,
            textcoords='data',
            clip_on=True) 
            
  anlast =  ax[i].annotate(int(ylast), 
            xy=( xlast , ylast),
            xycoords='data',
            xytext=(xlast, ylast+2),
            color= '#329999',  
            weight='bold',
            fontsize=12,
            textcoords='data',
            clip_on=True) 

  ax[i].annotate("",
              xy=(xmin, ymin), xycoords='data',
              xytext=(xlast, ylast), textcoords='data',
              arrowprops=dict(arrowstyle="<-", color="#87244B",  ls="--", lw="3",
                              shrinkA=5, shrinkB=5,
                              patchA=None, patchB=None,
                              connectionstyle="angle,angleA=-90,angleB=180,rad=0",
                              ),clip_on=True
              )


  if (i==0):
    ax[i].yaxis.tick_left()
  elif (i==4):
    ax[i].yaxis.tick_right()
  else:
    ax[i].set_yticklabels([])

plt.style.use('seaborn-poster')
plt.savefig("onefigure.png",dpi=300)
plt.show()